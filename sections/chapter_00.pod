=head0 *Wstęp

I<Nowoczesny Perl> jest jednym ze sposobów aby opisać sposób pracy najbardziej
wydajnych programistów Perl 5 na świecie. Oni używają idiomów języka.
Wykorzystują zasoby CPAN. Wykazują się dobrym smakiem i talentem do pisania
potężnego, łatwego w utrzymaniu, skalowalnego, zwięzłego i skutecznego kodu.
Ty również możesz się tego nauczyć!

Perl powstał w roku 1987 jako proste narzędzie do administracji systemami.
Chociaż rozpoczął przez określenie i zajęcie wygodnej niszy pomiędzy skryptami
powłoki a programowaniem w C, wkrótce stał się potężnym i wielostronnym
narzędziem.
Perl 5 ma ugruntowaną historię pragmatycznego podejścia i jasną przyszłość
poprawek i udoskonaleńN<Perl 6 to ponowne wynalezienie programowania opartego
na solidnych podstawach Perla, ale to temat na inną ksiązkę.>.

W czasie długiej historii Perla--szczególnie podczas 17 lat Perl 5--nasze
rozumienie co czyni programy Perl wielkimi uległo zmianie. Podczas gdy możesz
pisać produktywne programy które nigdy nie skorzystają z wszystkich możliwości
języka, globalna społeczność Perla wynalazła, pożyczyła, udoskonaliła oraz
poprawiła idee i udostępniła je każdemu chętnemu by je poznać.

=head1 Uruchomienie Nowoczesnego Perla

Moduł C<Modern::Perl> dostępny na CPAN (L<cpan>) prosi Perl aby ostrzegał
przed dwuznacznymi konstrukcjami oraz literówkami a także aktywuje nowe
funkcje wprowadzone w nowoczesnych wydaniach Perl 5. Jeśli nie zaznaczono
inaczej, fragmenty kodu zawsze zakładają ten podstawowy szablon programu:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl 2011;
    use autodie;

=end programlisting

... co jest równoznaczne z:

=begin programlisting

    #!/usr/bin/env perl

    use 5.012;      # wprowadza "use strict;"
    use warnings;
    use autodie;

=end programlisting

Niektóre przykłady używają funkcji testujących takich jak C<ok()>, C<like()>
oraz C<is()> (L<testing>). Te programy są zgodne z wzorcem:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl;
    B<use Test::More;>

    # przykładowy kod tutaj

    B<done_testing();>

=end programlisting

W czasie pisania tej ksiązki, aktualną stabilną wersją Perl 5 był Perl 5.14.
Przykłady w tej książce najlepiej działają z Perl 5.12.0 lub nowszym. Wiele z
przykładów będzie również działać ze starszymi wersjami Perl 5 z niewielkimi
zmianami, ale będziesz miał sporo trudności z wersjami starszymi od 5.10.0.

X<Strawberry Perl>
X<ActivePerl>
X<perlbrew>
X<CPAN; C<App::perlbrew>>

Jeśli nie masz zainstalowanego Perl 5 (lub jeśli masz zainstalowaną starą
wersję) możesz zainstalować nowsze wydanie samodzielnie. Użytkownicy
Windows powinni ściągnąć Strawberry Perl z U<http://www.strawberryperl.com/>
lub ActivePerl z U<http://www.activestate.com/activeperl>. Użytkownicy innych
systemów operacyjnych z Perl 5 już zainstalowanym (oraz z kompilatorem C a
także pozostałymi narzędziami programistycznymi) niech zaczną od instalacji
modułu C<App::perlbrew> z CPANN<Zobacz
U<http://search.cpan.org/perldoc?App::perlbrew> po instrukcje instalacji.>.

C<perlbrew> pozwala na instalację i zarządzanie wieloma wersjami Perl 5. To
umożliwia przełączanie pomiędzy wersjami Perl 5 a także na instalację Perl 5 i
modułów z CPAN w katalogu domowym bez wpływu na Perl zainstalowany z systemem.
Jeśli kiedykolwiek musiałeś błagać swojego administratora o pozwolenie na
instalację oprogramowania, zobaczysz jak o wiele prostsze będzie teraz Twoje
życie.

=head1 Podziękowanie

Ta książka by nie mogła powstać bez pytań, komentarzy, sugestii, porad,
mądrości i zachęty wielu, wielu ludzi. W szczególności autor i redaktor chcą
podziękować:

L<credits>

Wszystkie pozostałe błędy są z winy upartego autora.
